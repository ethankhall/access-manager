/*
 * This file is generated by jOOQ.
 */
package io.ehdev.account.db.tables.pojos;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_details", schema = "account_manager", indexes = {
    @Index(name = "email", unique = true, columnList = "email ASC"),
    @Index(name = "PRIMARY", unique = true, columnList = "user_id ASC"),
    @Index(name = "user_ref", unique = true, columnList = "user_ref ASC")
})
public class UserDetails implements Serializable {

    private static final long serialVersionUID = 932359634;

    private Long   userId;
    private String userRef;
    private String email;
    private String displayName;

    public UserDetails() {}

    public UserDetails(UserDetails value) {
        this.userId = value.userId;
        this.userRef = value.userRef;
        this.email = value.email;
        this.displayName = value.displayName;
    }

    public UserDetails(
        Long   userId,
        String userRef,
        String email,
        String displayName
    ) {
        this.userId = userId;
        this.userRef = userRef;
        this.email = email;
        this.displayName = displayName;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_id", unique = true, nullable = false, precision = 19)
    public Long getUserId() {
        return this.userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Column(name = "user_ref", unique = true, nullable = false, length = 12)
    @NotNull
    @Size(max = 12)
    public String getUserRef() {
        return this.userRef;
    }

    public void setUserRef(String userRef) {
        this.userRef = userRef;
    }

    @Column(name = "email", unique = true, nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "display_name", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    public String getDisplayName() {
        return this.displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserDetails (");

        sb.append(userId);
        sb.append(", ").append(userRef);
        sb.append(", ").append(email);
        sb.append(", ").append(displayName);

        sb.append(")");
        return sb.toString();
    }
}
