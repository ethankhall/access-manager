/*
 * This file is generated by jOOQ.
 */
package io.ehdev.account.db.tables;


import io.ehdev.account.db.AccountManager;
import io.ehdev.account.db.Indexes;
import io.ehdev.account.db.Keys;
import io.ehdev.account.db.tables.records.TargetAccessRuleRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TargetAccessRuleTable extends TableImpl<TargetAccessRuleRecord> {

    private static final long serialVersionUID = -2104023472;

    /**
     * The reference instance of <code>account_manager.target_access_rule</code>
     */
    public static final TargetAccessRuleTable TARGET_ACCESS_RULE = new TargetAccessRuleTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TargetAccessRuleRecord> getRecordType() {
        return TargetAccessRuleRecord.class;
    }

    /**
     * The column <code>account_manager.target_access_rule.rule_id</code>.
     */
    public final TableField<TargetAccessRuleRecord, Long> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>account_manager.target_access_rule.target_id</code>.
     */
    public final TableField<TargetAccessRuleRecord, Long> TARGET_ID = createField("target_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>account_manager.target_access_rule.resource_name</code>.
     */
    public final TableField<TargetAccessRuleRecord, String> RESOURCE_NAME = createField("resource_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>account_manager.target_access_rule.action_name</code>.
     */
    public final TableField<TargetAccessRuleRecord, String> ACTION_NAME = createField("action_name", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * Create a <code>account_manager.target_access_rule</code> table reference
     */
    public TargetAccessRuleTable() {
        this(DSL.name("target_access_rule"), null);
    }

    /**
     * Create an aliased <code>account_manager.target_access_rule</code> table reference
     */
    public TargetAccessRuleTable(String alias) {
        this(DSL.name(alias), TARGET_ACCESS_RULE);
    }

    /**
     * Create an aliased <code>account_manager.target_access_rule</code> table reference
     */
    public TargetAccessRuleTable(Name alias) {
        this(alias, TARGET_ACCESS_RULE);
    }

    private TargetAccessRuleTable(Name alias, Table<TargetAccessRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TargetAccessRuleTable(Name alias, Table<TargetAccessRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TargetAccessRuleTable(Table<O> child, ForeignKey<O, TargetAccessRuleRecord> key) {
        super(child, key, TARGET_ACCESS_RULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AccountManager.ACCOUNT_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TARGET_ACCESS_RULE_PRIMARY, Indexes.TARGET_ACCESS_RULE_TARGET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TargetAccessRuleRecord, Long> getIdentity() {
        return Keys.IDENTITY_TARGET_ACCESS_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TargetAccessRuleRecord> getPrimaryKey() {
        return Keys.KEY_TARGET_ACCESS_RULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TargetAccessRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<TargetAccessRuleRecord>>asList(Keys.KEY_TARGET_ACCESS_RULE_PRIMARY, Keys.KEY_TARGET_ACCESS_RULE_TARGET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TargetAccessRuleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TargetAccessRuleRecord, ?>>asList(Keys.RULE_TO_TARGET);
    }

    public TargetTable target() {
        return new TargetTable(this, Keys.RULE_TO_TARGET);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetAccessRuleTable as(String alias) {
        return new TargetAccessRuleTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetAccessRuleTable as(Name alias) {
        return new TargetAccessRuleTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetAccessRuleTable rename(String name) {
        return new TargetAccessRuleTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetAccessRuleTable rename(Name name) {
        return new TargetAccessRuleTable(name, null);
    }
}
