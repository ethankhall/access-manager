/*
 * This file is generated by jOOQ.
 */
package io.ehdev.account.db.tables.records;


import io.ehdev.account.db.tables.TargetTable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "target", schema = "account_manager", indexes = {
    @Index(name = "PRIMARY", unique = true, columnList = "target_id ASC"),
    @Index(name = "target_name", unique = true, columnList = "target_name ASC")
})
public class TargetRecord extends UpdatableRecordImpl<TargetRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -210722284;

    /**
     * Setter for <code>account_manager.target.target_id</code>.
     */
    public void setTargetId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>account_manager.target.target_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "target_id", unique = true, nullable = false, precision = 19)
    public Long getTargetId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>account_manager.target.target_name</code>.
     */
    public void setTargetName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>account_manager.target.target_name</code>.
     */
    @Column(name = "target_name", unique = true, nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    public String getTargetName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TargetTable.TARGET.TARGET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TargetTable.TARGET.TARGET_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getTargetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTargetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getTargetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTargetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetRecord value1(Long value) {
        setTargetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetRecord value2(String value) {
        setTargetName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TargetRecord
     */
    public TargetRecord() {
        super(TargetTable.TARGET);
    }

    /**
     * Create a detached, initialised TargetRecord
     */
    public TargetRecord(Long targetId, String targetName) {
        super(TargetTable.TARGET);

        set(0, targetId);
        set(1, targetName);
    }
}
