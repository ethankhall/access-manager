/*
 * This file is generated by jOOQ.
 */
package io.ehdev.account.db.tables;


import io.ehdev.account.db.AccountManager;
import io.ehdev.account.db.Indexes;
import io.ehdev.account.db.Keys;
import io.ehdev.account.db.tables.records.RuleGrantRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleGrantTable extends TableImpl<RuleGrantRecord> {

    private static final long serialVersionUID = 590905403;

    /**
     * The reference instance of <code>account_manager.rule_grant</code>
     */
    public static final RuleGrantTable RULE_GRANT = new RuleGrantTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleGrantRecord> getRecordType() {
        return RuleGrantRecord.class;
    }

    /**
     * The column <code>account_manager.rule_grant.grant_id</code>.
     */
    public final TableField<RuleGrantRecord, Long> GRANT_ID = createField("grant_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>account_manager.rule_grant.rule_id</code>.
     */
    public final TableField<RuleGrantRecord, Long> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>account_manager.rule_grant.user_id</code>.
     */
    public final TableField<RuleGrantRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>account_manager.rule_grant</code> table reference
     */
    public RuleGrantTable() {
        this(DSL.name("rule_grant"), null);
    }

    /**
     * Create an aliased <code>account_manager.rule_grant</code> table reference
     */
    public RuleGrantTable(String alias) {
        this(DSL.name(alias), RULE_GRANT);
    }

    /**
     * Create an aliased <code>account_manager.rule_grant</code> table reference
     */
    public RuleGrantTable(Name alias) {
        this(alias, RULE_GRANT);
    }

    private RuleGrantTable(Name alias, Table<RuleGrantRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleGrantTable(Name alias, Table<RuleGrantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RuleGrantTable(Table<O> child, ForeignKey<O, RuleGrantRecord> key) {
        super(child, key, RULE_GRANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AccountManager.ACCOUNT_MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RULE_GRANT_GRANT_TO_USER, Indexes.RULE_GRANT_PRIMARY, Indexes.RULE_GRANT_RULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RuleGrantRecord, Long> getIdentity() {
        return Keys.IDENTITY_RULE_GRANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleGrantRecord> getPrimaryKey() {
        return Keys.KEY_RULE_GRANT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleGrantRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleGrantRecord>>asList(Keys.KEY_RULE_GRANT_PRIMARY, Keys.KEY_RULE_GRANT_RULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RuleGrantRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RuleGrantRecord, ?>>asList(Keys.GRANT_TO_RULE, Keys.GRANT_TO_USER);
    }

    public TargetAccessRuleTable targetAccessRule() {
        return new TargetAccessRuleTable(this, Keys.GRANT_TO_RULE);
    }

    public UserDetailsTable userDetails() {
        return new UserDetailsTable(this, Keys.GRANT_TO_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleGrantTable as(String alias) {
        return new RuleGrantTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleGrantTable as(Name alias) {
        return new RuleGrantTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleGrantTable rename(String name) {
        return new RuleGrantTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleGrantTable rename(Name name) {
        return new RuleGrantTable(name, null);
    }
}
